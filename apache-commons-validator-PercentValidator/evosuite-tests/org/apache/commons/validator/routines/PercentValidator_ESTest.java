/*
 * This file was automatically generated by EvoSuite
 * Tue Jan 19 16:52:12 GMT 2021
 */

package org.apache.commons.validator.routines;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigDecimal;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.MessageFormat;
import java.text.NumberFormat;
import java.util.Locale;
import org.apache.commons.validator.routines.BigDecimalValidator;
import org.apache.commons.validator.routines.PercentValidator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.text.MockDateFormat;
import org.junit.runner.RunWith;

 
public class PercentValidator_ESTest{

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BigDecimalValidator bigDecimalValidator0 = PercentValidator.getInstance();
      BigDecimal bigDecimal0 = bigDecimalValidator0.validate("org.apache.commons.validator.routines.AbstractNumberValidator", "%-jlmymY");
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PercentValidator percentValidator0 = (PercentValidator)PercentValidator.getInstance();
      MessageFormat messageFormat0 = new MessageFormat("&!Sk~oAh7");
      // Undeclared exception!
      try { 
        percentValidator0.parse("&!Sk~oAh7", messageFormat0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PercentValidator percentValidator0 = (PercentValidator)PercentValidator.getInstance();
      Locale locale0 = Locale.US;
      MessageFormat messageFormat0 = new MessageFormat("$", locale0);
      // Undeclared exception!
      try { 
        percentValidator0.parse((String) null, messageFormat0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.routines.AbstractFormatValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PercentValidator percentValidator0 = new PercentValidator();
      boolean boolean0 = percentValidator0.isValid("-5");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PercentValidator percentValidator0 = new PercentValidator(false);
      DateFormat dateFormat0 = MockDateFormat.getInstance();
      Object object0 = percentValidator0.parse("{}i5-", dateFormat0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PercentValidator percentValidator0 = new PercentValidator(false);
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance();
      BigDecimal bigDecimal0 = (BigDecimal)percentValidator0.parse("0.01", numberFormat0);
      assertEquals((short)0, bigDecimal0.shortValue());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PercentValidator percentValidator0 = new PercentValidator();
      DecimalFormat decimalFormat0 = new DecimalFormat("-5");
      Object object0 = percentValidator0.parse("-5", decimalFormat0);
      assertNull(object0);
  }
}
