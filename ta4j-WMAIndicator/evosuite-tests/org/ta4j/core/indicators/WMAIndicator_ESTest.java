/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 06 12:46:55 GMT 2021
 */

package org.ta4j.core.indicators;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigDecimal;
import java.util.function.Function;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.ta4j.core.BarSeries;
import org.ta4j.core.BaseBarSeries;
import org.ta4j.core.Indicator;
import org.ta4j.core.indicators.ParabolicSarIndicator;
import org.ta4j.core.indicators.RWILowIndicator;
import org.ta4j.core.indicators.StochasticOscillatorKIndicator;
import org.ta4j.core.indicators.WMAIndicator;
import org.ta4j.core.num.Num;
import org.ta4j.core.num.PrecisionNum;

 
public class WMAIndicator_ESTest{

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BaseBarSeries baseBarSeries0 = new BaseBarSeries(">QwD0/T`=[5&A7NX\"Mu");
      RWILowIndicator rWILowIndicator0 = new RWILowIndicator(baseBarSeries0, 100);
      WMAIndicator wMAIndicator0 = new WMAIndicator(rWILowIndicator0, 100);
      // Undeclared exception!
      try { 
        wMAIndicator0.calculate((-1816));
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StochasticOscillatorKIndicator stochasticOscillatorKIndicator0 = new StochasticOscillatorKIndicator((BarSeries) null, 51);
      WMAIndicator wMAIndicator0 = new WMAIndicator(stochasticOscillatorKIndicator0, 1);
      // Undeclared exception!
      try { 
        wMAIndicator0.calculate(125);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ta4j.core.indicators.AbstractIndicator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BaseBarSeries baseBarSeries0 = new BaseBarSeries("qoFgpDXl*E7j5Gm_Zr_", (Function<Number, Num>) null);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      PrecisionNum precisionNum0 = PrecisionNum.valueOf(bigDecimal0);
      ParabolicSarIndicator parabolicSarIndicator0 = new ParabolicSarIndicator(baseBarSeries0, precisionNum0, precisionNum0, precisionNum0);
      WMAIndicator wMAIndicator0 = new WMAIndicator(parabolicSarIndicator0, 0);
      // Undeclared exception!
      try { 
        wMAIndicator0.calculate(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Size of series: 0 bars, 0 bars removed, index = -1
         //
         verifyException("org.ta4j.core.BaseBarSeries", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BaseBarSeries baseBarSeries0 = new BaseBarSeries();
      RWILowIndicator rWILowIndicator0 = new RWILowIndicator(baseBarSeries0, 678);
      WMAIndicator wMAIndicator0 = new WMAIndicator(rWILowIndicator0, 678);
      rWILowIndicator0.highestResultIndex = 19;
      // Undeclared exception!
      try { 
        wMAIndicator0.calculate(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      WMAIndicator wMAIndicator0 = null;
      try {
        wMAIndicator0 = new WMAIndicator((Indicator<Num>) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ta4j.core.indicators.CachedIndicator", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      BaseBarSeries baseBarSeries0 = new BaseBarSeries();
      RWILowIndicator rWILowIndicator0 = new RWILowIndicator(baseBarSeries0, 498);
      WMAIndicator wMAIndicator0 = new WMAIndicator(rWILowIndicator0, 498);
      Num num0 = wMAIndicator0.calculate(0);
      assertEquals("NaN", num0.getName());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      BaseBarSeries baseBarSeries0 = new BaseBarSeries();
      RWILowIndicator rWILowIndicator0 = new RWILowIndicator(baseBarSeries0, 498);
      WMAIndicator wMAIndicator0 = new WMAIndicator(rWILowIndicator0, 498);
      String string0 = wMAIndicator0.toString();
      assertEquals("WMAIndicator barCount: 498", string0);
  }
}
