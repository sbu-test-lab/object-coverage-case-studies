/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 22 12:21:02 GMT 2021
 */

package org.apache.commons.validator.routines;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.text.Format;
import java.time.format.DateTimeFormatter;
import java.util.Locale;
import org.apache.commons.validator.routines.BigDecimalValidator;
import org.apache.commons.validator.routines.CurrencyValidator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.junit.runner.RunWith;

 
public class CurrencyValidator_ESTest{

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CurrencyValidator currencyValidator0 = new CurrencyValidator();
      Locale locale0 = Locale.FRANCE;
      DecimalFormat decimalFormat0 = (DecimalFormat)currencyValidator0.getFormat((String) null, locale0);
      currencyValidator0.parse("", decimalFormat0);
      assertEquals(" ", decimalFormat0.getPositiveSuffix());
      assertEquals(2, decimalFormat0.getMinimumFractionDigits());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CurrencyValidator currencyValidator0 = (CurrencyValidator)CurrencyValidator.getInstance();
      DateTimeFormatter dateTimeFormatter0 = DateTimeFormatter.ofPattern("");
      Format format0 = dateTimeFormatter0.toFormat();
      // Undeclared exception!
      try { 
        currencyValidator0.parse("", format0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CurrencyValidator currencyValidator0 = new CurrencyValidator(true, true);
      // Undeclared exception!
      try { 
        currencyValidator0.parse("C>>6Wu+cK2", (Format) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.routines.AbstractFormatValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BigDecimalValidator bigDecimalValidator0 = CurrencyValidator.getInstance();
      boolean boolean0 = bigDecimalValidator0.isValid("C^KWJs4^R;f");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CurrencyValidator currencyValidator0 = new CurrencyValidator(false, false);
      boolean boolean0 = currencyValidator0.isValid("2wyQJ&=N:Hk3dU<", "2wyQJ&=N:Hk3dU<");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CurrencyValidator currencyValidator0 = new CurrencyValidator(false, false);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      BigDecimal bigDecimal0 = (BigDecimal)currencyValidator0.parse("2wyQJ&=N:Hk3dU<", decimalFormat0);
      assertEquals((byte)2, bigDecimal0.byteValue());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CurrencyValidator currencyValidator0 = (CurrencyValidator)CurrencyValidator.getInstance();
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      Object object0 = currencyValidator0.parse("C^KWJs4^R;f", mockSimpleDateFormat0);
      assertNull(object0);
  }
}
